
KuartisHomework.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803c00  00803c00  00000fe0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f6c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  00803c00  00803c00  00000fe0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001010  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  0000104c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000344f  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000232f  00000000  00000000  0000453b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d45  00000000  00000000  0000686a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  000075b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001855  00000000  00000000  00007770  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000523  00000000  00000000  00008fc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000094e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__vector_3>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 56 05 	jmp	0xaac	; 0xaac <__vector_6>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  2c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  6c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  70:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  74:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  78:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  7c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  80:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  84:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  88:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  8c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_clear_bss>:
  9c:	2c e3       	ldi	r18, 0x3C	; 60
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	bc e3       	ldi	r27, 0x3C	; 60
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	ad 33       	cpi	r26, 0x3D	; 61
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	eb d4       	rcall	.+2518   	; 0xa84 <main>
  ae:	5c c7       	rjmp	.+3768   	; 0xf68 <_exit>

000000b0 <__bad_interrupt>:
  b0:	a7 cf       	rjmp	.-178    	; 0x0 <__vectors>

000000b2 <Buzzer>:
	//Press power button
	InputState.currentState = POWER;
	WriteInput();
	setState(); // OFF
	_delay_ms(1000);
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b0 e0       	ldi	r27, 0x00	; 0
  ba:	80 93 30 3c 	sts	0x3C30, r24	; 0x803c30 <BuzzerFlag>
  be:	90 93 31 3c 	sts	0x3C31, r25	; 0x803c31 <BuzzerFlag+0x1>
  c2:	a0 93 32 3c 	sts	0x3C32, r26	; 0x803c32 <BuzzerFlag+0x2>
  c6:	b0 93 33 3c 	sts	0x3C33, r27	; 0x803c33 <BuzzerFlag+0x3>
  ca:	80 91 3c 3c 	lds	r24, 0x3C3C	; 0x803c3c <BuzzerState>
  ce:	82 30       	cpi	r24, 0x02	; 2
  d0:	09 f4       	brne	.+2      	; 0xd4 <Buzzer+0x22>
  d2:	91 c0       	rjmp	.+290    	; 0x1f6 <__EEPROM_REGION_LENGTH__+0xf6>
  d4:	30 f4       	brcc	.+12     	; 0xe2 <Buzzer+0x30>
  d6:	88 23       	and	r24, r24
  d8:	71 f0       	breq	.+28     	; 0xf6 <Buzzer+0x44>
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	09 f4       	brne	.+2      	; 0xe0 <Buzzer+0x2e>
  de:	4b c0       	rjmp	.+150    	; 0x176 <__EEPROM_REGION_LENGTH__+0x76>
  e0:	08 95       	ret
  e2:	85 30       	cpi	r24, 0x05	; 5
  e4:	09 f4       	brne	.+2      	; 0xe8 <Buzzer+0x36>
  e6:	ae c0       	rjmp	.+348    	; 0x244 <__EEPROM_REGION_LENGTH__+0x144>
  e8:	86 30       	cpi	r24, 0x06	; 6
  ea:	09 f4       	brne	.+2      	; 0xee <Buzzer+0x3c>
  ec:	c2 c0       	rjmp	.+388    	; 0x272 <__EEPROM_REGION_LENGTH__+0x172>
  ee:	83 30       	cpi	r24, 0x03	; 3
  f0:	09 f0       	breq	.+2      	; 0xf4 <Buzzer+0x42>
  f2:	ce c0       	rjmp	.+412    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
  f4:	90 c0       	rjmp	.+288    	; 0x216 <__EEPROM_REGION_LENGTH__+0x116>
  f6:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <BuzzerCounter>
  fa:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
  fe:	a0 91 2e 3c 	lds	r26, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 102:	b0 91 2f 3c 	lds	r27, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 106:	80 fd       	sbrc	r24, 0
 108:	11 c0       	rjmp	.+34     	; 0x12c <__EEPROM_REGION_LENGTH__+0x2c>
 10a:	80 91 28 3c 	lds	r24, 0x3C28	; 0x803c28 <Pitch_flag>
 10e:	90 91 29 3c 	lds	r25, 0x3C29	; 0x803c29 <Pitch_flag+0x1>
 112:	a0 91 2a 3c 	lds	r26, 0x3C2A	; 0x803c2a <Pitch_flag+0x2>
 116:	b0 91 2b 3c 	lds	r27, 0x3C2B	; 0x803c2b <Pitch_flag+0x3>
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	a1 05       	cpc	r26, r1
 11e:	b1 05       	cpc	r27, r1
 120:	29 f4       	brne	.+10     	; 0x12c <__EEPROM_REGION_LENGTH__+0x2c>
 122:	e0 e6       	ldi	r30, 0x60	; 96
 124:	f4 e0       	ldi	r31, 0x04	; 4
 126:	84 81       	ldd	r24, Z+4	; 0x04
 128:	80 58       	subi	r24, 0x80	; 128
 12a:	84 83       	std	Z+4, r24	; 0x04
 12c:	60 91 2c 3c 	lds	r22, 0x3C2C	; 0x803c2c <BuzzerCounter>
 130:	70 91 2d 3c 	lds	r23, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 134:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 138:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 13c:	2a e0       	ldi	r18, 0x0A	; 10
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	40 e0       	ldi	r20, 0x00	; 0
 142:	50 e0       	ldi	r21, 0x00	; 0
 144:	bd d6       	rcall	.+3450   	; 0xec0 <__divmodsi4>
 146:	67 2b       	or	r22, r23
 148:	68 2b       	or	r22, r24
 14a:	69 2b       	or	r22, r25
 14c:	09 f0       	breq	.+2      	; 0x150 <__EEPROM_REGION_LENGTH__+0x50>
 14e:	a0 c0       	rjmp	.+320    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 150:	80 91 28 3c 	lds	r24, 0x3C28	; 0x803c28 <Pitch_flag>
 154:	90 91 29 3c 	lds	r25, 0x3C29	; 0x803c29 <Pitch_flag+0x1>
 158:	a0 91 2a 3c 	lds	r26, 0x3C2A	; 0x803c2a <Pitch_flag+0x2>
 15c:	b0 91 2b 3c 	lds	r27, 0x3C2B	; 0x803c2b <Pitch_flag+0x3>
 160:	89 2b       	or	r24, r25
 162:	8a 2b       	or	r24, r26
 164:	8b 2b       	or	r24, r27
 166:	09 f0       	breq	.+2      	; 0x16a <__EEPROM_REGION_LENGTH__+0x6a>
 168:	93 c0       	rjmp	.+294    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 16a:	e0 e6       	ldi	r30, 0x60	; 96
 16c:	f4 e0       	ldi	r31, 0x04	; 4
 16e:	84 81       	ldd	r24, Z+4	; 0x04
 170:	80 58       	subi	r24, 0x80	; 128
 172:	84 83       	std	Z+4, r24	; 0x04
 174:	08 95       	ret
 176:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <BuzzerCounter>
 17a:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 17e:	a0 91 2e 3c 	lds	r26, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 182:	b0 91 2f 3c 	lds	r27, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 186:	80 fd       	sbrc	r24, 0
 188:	11 c0       	rjmp	.+34     	; 0x1ac <__EEPROM_REGION_LENGTH__+0xac>
 18a:	80 91 28 3c 	lds	r24, 0x3C28	; 0x803c28 <Pitch_flag>
 18e:	90 91 29 3c 	lds	r25, 0x3C29	; 0x803c29 <Pitch_flag+0x1>
 192:	a0 91 2a 3c 	lds	r26, 0x3C2A	; 0x803c2a <Pitch_flag+0x2>
 196:	b0 91 2b 3c 	lds	r27, 0x3C2B	; 0x803c2b <Pitch_flag+0x3>
 19a:	89 2b       	or	r24, r25
 19c:	8a 2b       	or	r24, r26
 19e:	8b 2b       	or	r24, r27
 1a0:	29 f4       	brne	.+10     	; 0x1ac <__EEPROM_REGION_LENGTH__+0xac>
 1a2:	e0 e6       	ldi	r30, 0x60	; 96
 1a4:	f4 e0       	ldi	r31, 0x04	; 4
 1a6:	84 81       	ldd	r24, Z+4	; 0x04
 1a8:	80 58       	subi	r24, 0x80	; 128
 1aa:	84 83       	std	Z+4, r24	; 0x04
 1ac:	60 91 2c 3c 	lds	r22, 0x3C2C	; 0x803c2c <BuzzerCounter>
 1b0:	70 91 2d 3c 	lds	r23, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 1b4:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 1b8:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 1bc:	2a e0       	ldi	r18, 0x0A	; 10
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	7d d6       	rcall	.+3322   	; 0xec0 <__divmodsi4>
 1c6:	67 2b       	or	r22, r23
 1c8:	68 2b       	or	r22, r24
 1ca:	69 2b       	or	r22, r25
 1cc:	09 f0       	breq	.+2      	; 0x1d0 <__EEPROM_REGION_LENGTH__+0xd0>
 1ce:	60 c0       	rjmp	.+192    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 1d0:	80 91 28 3c 	lds	r24, 0x3C28	; 0x803c28 <Pitch_flag>
 1d4:	90 91 29 3c 	lds	r25, 0x3C29	; 0x803c29 <Pitch_flag+0x1>
 1d8:	a0 91 2a 3c 	lds	r26, 0x3C2A	; 0x803c2a <Pitch_flag+0x2>
 1dc:	b0 91 2b 3c 	lds	r27, 0x3C2B	; 0x803c2b <Pitch_flag+0x3>
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	a1 05       	cpc	r26, r1
 1e4:	b1 05       	cpc	r27, r1
 1e6:	09 f0       	breq	.+2      	; 0x1ea <__EEPROM_REGION_LENGTH__+0xea>
 1e8:	53 c0       	rjmp	.+166    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 1ea:	e0 e6       	ldi	r30, 0x60	; 96
 1ec:	f4 e0       	ldi	r31, 0x04	; 4
 1ee:	84 81       	ldd	r24, Z+4	; 0x04
 1f0:	80 58       	subi	r24, 0x80	; 128
 1f2:	84 83       	std	Z+4, r24	; 0x04
 1f4:	08 95       	ret
 1f6:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <BuzzerCounter>
 1fa:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 1fe:	a0 91 2e 3c 	lds	r26, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 202:	b0 91 2f 3c 	lds	r27, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 206:	80 fd       	sbrc	r24, 0
 208:	43 c0       	rjmp	.+134    	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 20a:	e0 e6       	ldi	r30, 0x60	; 96
 20c:	f4 e0       	ldi	r31, 0x04	; 4
 20e:	84 81       	ldd	r24, Z+4	; 0x04
 210:	80 58       	subi	r24, 0x80	; 128
 212:	84 83       	std	Z+4, r24	; 0x04
 214:	08 95       	ret
 216:	60 91 2c 3c 	lds	r22, 0x3C2C	; 0x803c2c <BuzzerCounter>
 21a:	70 91 2d 3c 	lds	r23, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 21e:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 222:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 226:	2a e0       	ldi	r18, 0x0A	; 10
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	48 d6       	rcall	.+3216   	; 0xec0 <__divmodsi4>
 230:	67 2b       	or	r22, r23
 232:	68 2b       	or	r22, r24
 234:	69 2b       	or	r22, r25
 236:	61 f5       	brne	.+88     	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 238:	e0 e6       	ldi	r30, 0x60	; 96
 23a:	f4 e0       	ldi	r31, 0x04	; 4
 23c:	84 81       	ldd	r24, Z+4	; 0x04
 23e:	80 58       	subi	r24, 0x80	; 128
 240:	84 83       	std	Z+4, r24	; 0x04
 242:	08 95       	ret
 244:	60 91 2c 3c 	lds	r22, 0x3C2C	; 0x803c2c <BuzzerCounter>
 248:	70 91 2d 3c 	lds	r23, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 24c:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 250:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 254:	2a e0       	ldi	r18, 0x0A	; 10
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	50 e0       	ldi	r21, 0x00	; 0
 25c:	31 d6       	rcall	.+3170   	; 0xec0 <__divmodsi4>
 25e:	67 2b       	or	r22, r23
 260:	68 2b       	or	r22, r24
 262:	69 2b       	or	r22, r25
 264:	a9 f4       	brne	.+42     	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 266:	e0 e6       	ldi	r30, 0x60	; 96
 268:	f4 e0       	ldi	r31, 0x04	; 4
 26a:	84 81       	ldd	r24, Z+4	; 0x04
 26c:	80 58       	subi	r24, 0x80	; 128
 26e:	84 83       	std	Z+4, r24	; 0x04
 270:	08 95       	ret
 272:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <BuzzerCounter>
 276:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 27a:	a0 91 2e 3c 	lds	r26, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 27e:	b0 91 2f 3c 	lds	r27, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 282:	80 fd       	sbrc	r24, 0
 284:	05 c0       	rjmp	.+10     	; 0x290 <__EEPROM_REGION_LENGTH__+0x190>
 286:	e0 e6       	ldi	r30, 0x60	; 96
 288:	f4 e0       	ldi	r31, 0x04	; 4
 28a:	84 81       	ldd	r24, Z+4	; 0x04
 28c:	80 58       	subi	r24, 0x80	; 128
 28e:	84 83       	std	Z+4, r24	; 0x04
 290:	08 95       	ret

00000292 <Initialize>:
 292:	78 94       	sei
 294:	e0 e0       	ldi	r30, 0x00	; 0
 296:	f4 e0       	ldi	r31, 0x04	; 4
 298:	87 e2       	ldi	r24, 0x27	; 39
 29a:	80 83       	st	Z, r24
 29c:	8f ef       	ldi	r24, 0xFF	; 255
 29e:	84 83       	std	Z+4, r24	; 0x04
 2a0:	a0 e6       	ldi	r26, 0x60	; 96
 2a2:	b4 e0       	ldi	r27, 0x04	; 4
 2a4:	84 e7       	ldi	r24, 0x74	; 116
 2a6:	8c 93       	st	X, r24
 2a8:	14 96       	adiw	r26, 0x04	; 4
 2aa:	1c 92       	st	X, r1
 2ac:	14 97       	sbiw	r26, 0x04	; 4
 2ae:	8c 91       	ld	r24, X
 2b0:	80 68       	ori	r24, 0x80	; 128
 2b2:	8c 93       	st	X, r24
 2b4:	14 96       	adiw	r26, 0x04	; 4
 2b6:	8c 91       	ld	r24, X
 2b8:	14 97       	sbiw	r26, 0x04	; 4
 2ba:	8f 77       	andi	r24, 0x7F	; 127
 2bc:	14 96       	adiw	r26, 0x04	; 4
 2be:	8c 93       	st	X, r24
 2c0:	80 81       	ld	r24, Z
 2c2:	87 7f       	andi	r24, 0xF7	; 247
 2c4:	80 83       	st	Z, r24
 2c6:	83 89       	ldd	r24, Z+19	; 0x13
 2c8:	83 60       	ori	r24, 0x03	; 3
 2ca:	83 8b       	std	Z+19, r24	; 0x13
 2cc:	8f b7       	in	r24, 0x3f	; 63
 2ce:	80 68       	ori	r24, 0x80	; 128
 2d0:	8f bf       	out	0x3f, r24	; 63
 2d2:	78 94       	sei
 2d4:	10 92 39 3c 	sts	0x3C39, r1	; 0x803c39 <State>
 2d8:	10 92 34 3c 	sts	0x3C34, r1	; 0x803c34 <LightState>
 2dc:	10 92 3a 3c 	sts	0x3C3A, r1	; 0x803c3a <NECState>
 2e0:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__RODATA_PM_OFFSET__+0x7fc147>
 2e4:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7fc141>
 2e8:	81 11       	cpse	r24, r1
 2ea:	fc cf       	rjmp	.-8      	; 0x2e4 <Initialize+0x52>
 2ec:	e0 e4       	ldi	r30, 0x40	; 64
 2ee:	f1 e0       	ldi	r31, 0x01	; 1
 2f0:	84 e0       	ldi	r24, 0x04	; 4
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	82 87       	std	Z+10, r24	; 0x0a
 2f6:	93 87       	std	Z+11, r25	; 0x0b
 2f8:	82 81       	ldd	r24, Z+2	; 0x02
 2fa:	81 60       	ori	r24, 0x01	; 1
 2fc:	82 83       	std	Z+2, r24	; 0x02
 2fe:	81 e8       	ldi	r24, 0x81	; 129
 300:	80 83       	st	Z, r24
 302:	08 95       	ret

00000304 <VerifyAddress>:
 304:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 308:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 30c:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 310:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 314:	88 27       	eor	r24, r24
 316:	99 27       	eor	r25, r25
 318:	00 97       	sbiw	r24, 0x00	; 0
 31a:	a6 46       	sbci	r26, 0x66	; 102
 31c:	b1 48       	sbci	r27, 0x81	; 129
 31e:	11 f4       	brne	.+4      	; 0x324 <VerifyAddress+0x20>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	08 95       	ret
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	08 95       	ret

00000328 <GenerateRepeatCode>:
 328:	10 92 1c 3c 	sts	0x3C1C, r1	; 0x803c1c <tick_counter>
 32c:	10 92 1d 3c 	sts	0x3C1D, r1	; 0x803c1d <tick_counter+0x1>
 330:	10 92 1e 3c 	sts	0x3C1E, r1	; 0x803c1e <tick_counter+0x2>
 334:	10 92 1f 3c 	sts	0x3C1F, r1	; 0x803c1f <tick_counter+0x3>
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	80 93 10 3c 	sts	0x3C10, r24	; 0x803c10 <hold_flag>
 340:	90 93 11 3c 	sts	0x3C11, r25	; 0x803c11 <hold_flag+0x1>
 344:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 348:	82 30       	cpi	r24, 0x02	; 2
 34a:	20 f4       	brcc	.+8      	; 0x354 <GenerateRepeatCode+0x2c>
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 352:	08 95       	ret
 354:	9e ef       	ldi	r25, 0xFE	; 254
 356:	98 0f       	add	r25, r24
 358:	92 30       	cpi	r25, 0x02	; 2
 35a:	20 f4       	brcc	.+8      	; 0x364 <GenerateRepeatCode+0x3c>
 35c:	83 e0       	ldi	r24, 0x03	; 3
 35e:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 362:	08 95       	ret
 364:	9c ef       	ldi	r25, 0xFC	; 252
 366:	98 0f       	add	r25, r24
 368:	92 30       	cpi	r25, 0x02	; 2
 36a:	20 f4       	brcc	.+8      	; 0x374 <GenerateRepeatCode+0x4c>
 36c:	85 e0       	ldi	r24, 0x05	; 5
 36e:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 372:	08 95       	ret
 374:	86 50       	subi	r24, 0x06	; 6
 376:	82 30       	cpi	r24, 0x02	; 2
 378:	18 f4       	brcc	.+6      	; 0x380 <GenerateRepeatCode+0x58>
 37a:	87 e0       	ldi	r24, 0x07	; 7
 37c:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 380:	08 95       	ret

00000382 <disableIR_ISR>:
 382:	e0 e0       	ldi	r30, 0x00	; 0
 384:	f4 e0       	ldi	r31, 0x04	; 4
 386:	83 89       	ldd	r24, Z+19	; 0x13
 388:	13 8a       	std	Z+19, r1	; 0x13
 38a:	08 95       	ret

0000038c <enableIR_ISR>:
 38c:	e0 e0       	ldi	r30, 0x00	; 0
 38e:	f4 e0       	ldi	r31, 0x04	; 4
 390:	83 89       	ldd	r24, Z+19	; 0x13
 392:	83 60       	ori	r24, 0x03	; 3
 394:	83 8b       	std	Z+19, r24	; 0x13
 396:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 39a:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 39e:	08 95       	ret

000003a0 <disableRTC>:
 3a0:	e0 e4       	ldi	r30, 0x40	; 64
 3a2:	f1 e0       	ldi	r31, 0x01	; 1
 3a4:	10 86       	std	Z+8, r1	; 0x08
 3a6:	11 86       	std	Z+9, r1	; 0x09
 3a8:	82 81       	ldd	r24, Z+2	; 0x02
 3aa:	8e 7f       	andi	r24, 0xFE	; 254
 3ac:	82 83       	std	Z+2, r24	; 0x02
 3ae:	10 92 1c 3c 	sts	0x3C1C, r1	; 0x803c1c <tick_counter>
 3b2:	10 92 1d 3c 	sts	0x3C1D, r1	; 0x803c1d <tick_counter+0x1>
 3b6:	10 92 1e 3c 	sts	0x3C1E, r1	; 0x803c1e <tick_counter+0x2>
 3ba:	10 92 1f 3c 	sts	0x3C1F, r1	; 0x803c1f <tick_counter+0x3>
 3be:	08 95       	ret

000003c0 <enableRTC>:
 3c0:	e0 e4       	ldi	r30, 0x40	; 64
 3c2:	f1 e0       	ldi	r31, 0x01	; 1
 3c4:	82 81       	ldd	r24, Z+2	; 0x02
 3c6:	81 60       	ori	r24, 0x01	; 1
 3c8:	82 83       	std	Z+2, r24	; 0x02
 3ca:	08 95       	ret

000003cc <DevModeBlink>:
 3cc:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <DevModeLightState>
 3d0:	81 30       	cpi	r24, 0x01	; 1
 3d2:	89 f0       	breq	.+34     	; 0x3f6 <DevModeBlink+0x2a>
 3d4:	28 f0       	brcs	.+10     	; 0x3e0 <DevModeBlink+0x14>
 3d6:	82 30       	cpi	r24, 0x02	; 2
 3d8:	c9 f0       	breq	.+50     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 3da:	83 30       	cpi	r24, 0x03	; 3
 3dc:	11 f1       	breq	.+68     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3de:	2b c0       	rjmp	.+86     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 3e0:	e0 e0       	ldi	r30, 0x00	; 0
 3e2:	f4 e0       	ldi	r31, 0x04	; 4
 3e4:	8f ef       	ldi	r24, 0xFF	; 255
 3e6:	84 83       	std	Z+4, r24	; 0x04
 3e8:	84 81       	ldd	r24, Z+4	; 0x04
 3ea:	8a 7f       	andi	r24, 0xFA	; 250
 3ec:	84 83       	std	Z+4, r24	; 0x04
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <DevModeLightState>
 3f4:	08 95       	ret
 3f6:	e0 e0       	ldi	r30, 0x00	; 0
 3f8:	f4 e0       	ldi	r31, 0x04	; 4
 3fa:	8f ef       	ldi	r24, 0xFF	; 255
 3fc:	84 83       	std	Z+4, r24	; 0x04
 3fe:	84 81       	ldd	r24, Z+4	; 0x04
 400:	89 7f       	andi	r24, 0xF9	; 249
 402:	84 83       	std	Z+4, r24	; 0x04
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <DevModeLightState>
 40a:	08 95       	ret
 40c:	e0 e0       	ldi	r30, 0x00	; 0
 40e:	f4 e0       	ldi	r31, 0x04	; 4
 410:	8f ef       	ldi	r24, 0xFF	; 255
 412:	84 83       	std	Z+4, r24	; 0x04
 414:	84 81       	ldd	r24, Z+4	; 0x04
 416:	8d 7d       	andi	r24, 0xDD	; 221
 418:	84 83       	std	Z+4, r24	; 0x04
 41a:	83 e0       	ldi	r24, 0x03	; 3
 41c:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <DevModeLightState>
 420:	08 95       	ret
 422:	e0 e0       	ldi	r30, 0x00	; 0
 424:	f4 e0       	ldi	r31, 0x04	; 4
 426:	8f ef       	ldi	r24, 0xFF	; 255
 428:	84 83       	std	Z+4, r24	; 0x04
 42a:	84 81       	ldd	r24, Z+4	; 0x04
 42c:	8e 7d       	andi	r24, 0xDE	; 222
 42e:	84 83       	std	Z+4, r24	; 0x04
 430:	10 92 3b 3c 	sts	0x3C3B, r1	; 0x803c3b <DevModeLightState>
 434:	08 95       	ret
 436:	10 92 3b 3c 	sts	0x3C3B, r1	; 0x803c3b <DevModeLightState>
 43a:	e0 e0       	ldi	r30, 0x00	; 0
 43c:	f4 e0       	ldi	r31, 0x04	; 4
 43e:	8f ef       	ldi	r24, 0xFF	; 255
 440:	84 83       	std	Z+4, r24	; 0x04
 442:	84 81       	ldd	r24, Z+4	; 0x04
 444:	8e 7d       	andi	r24, 0xDE	; 222
 446:	84 83       	std	Z+4, r24	; 0x04
 448:	08 95       	ret

0000044a <setState>:
 44a:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 44e:	82 30       	cpi	r24, 0x02	; 2
 450:	59 f1       	breq	.+86     	; 0x4a8 <setState+0x5e>
 452:	28 f4       	brcc	.+10     	; 0x45e <setState+0x14>
 454:	88 23       	and	r24, r24
 456:	59 f0       	breq	.+22     	; 0x46e <setState+0x24>
 458:	81 30       	cpi	r24, 0x01	; 1
 45a:	b9 f0       	breq	.+46     	; 0x48a <setState+0x40>
 45c:	5a c0       	rjmp	.+180    	; 0x512 <setState+0xc8>
 45e:	84 30       	cpi	r24, 0x04	; 4
 460:	09 f4       	brne	.+2      	; 0x464 <setState+0x1a>
 462:	48 c0       	rjmp	.+144    	; 0x4f4 <setState+0xaa>
 464:	80 f1       	brcs	.+96     	; 0x4c6 <setState+0x7c>
 466:	85 30       	cpi	r24, 0x05	; 5
 468:	09 f4       	brne	.+2      	; 0x46c <setState+0x22>
 46a:	51 c0       	rjmp	.+162    	; 0x50e <setState+0xc4>
 46c:	52 c0       	rjmp	.+164    	; 0x512 <setState+0xc8>
 46e:	8f ef       	ldi	r24, 0xFF	; 255
 470:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <__RODATA_PM_OFFSET__+0x7fc404>
 474:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <__RODATA_PM_OFFSET__+0x7fc464>
 478:	10 92 08 3c 	sts	0x3C08, r1	; 0x803c08 <boost_total_timer>
 47c:	10 92 09 3c 	sts	0x3C09, r1	; 0x803c09 <boost_total_timer+0x1>
 480:	10 92 0a 3c 	sts	0x3C0A, r1	; 0x803c0a <boost_total_timer+0x2>
 484:	10 92 0b 3c 	sts	0x3C0B, r1	; 0x803c0b <boost_total_timer+0x3>
 488:	08 95       	ret
 48a:	e0 e0       	ldi	r30, 0x00	; 0
 48c:	f4 e0       	ldi	r31, 0x04	; 4
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	84 83       	std	Z+4, r24	; 0x04
 492:	84 81       	ldd	r24, Z+4	; 0x04
 494:	8e 7f       	andi	r24, 0xFE	; 254
 496:	84 83       	std	Z+4, r24	; 0x04
 498:	e0 e6       	ldi	r30, 0x60	; 96
 49a:	f4 e0       	ldi	r31, 0x04	; 4
 49c:	84 81       	ldd	r24, Z+4	; 0x04
 49e:	84 83       	std	Z+4, r24	; 0x04
 4a0:	84 81       	ldd	r24, Z+4	; 0x04
 4a2:	80 64       	ori	r24, 0x40	; 64
 4a4:	84 83       	std	Z+4, r24	; 0x04
 4a6:	08 95       	ret
 4a8:	e0 e0       	ldi	r30, 0x00	; 0
 4aa:	f4 e0       	ldi	r31, 0x04	; 4
 4ac:	8f ef       	ldi	r24, 0xFF	; 255
 4ae:	84 83       	std	Z+4, r24	; 0x04
 4b0:	84 81       	ldd	r24, Z+4	; 0x04
 4b2:	8a 7f       	andi	r24, 0xFA	; 250
 4b4:	84 83       	std	Z+4, r24	; 0x04
 4b6:	e0 e6       	ldi	r30, 0x60	; 96
 4b8:	f4 e0       	ldi	r31, 0x04	; 4
 4ba:	84 81       	ldd	r24, Z+4	; 0x04
 4bc:	84 83       	std	Z+4, r24	; 0x04
 4be:	84 81       	ldd	r24, Z+4	; 0x04
 4c0:	80 62       	ori	r24, 0x20	; 32
 4c2:	84 83       	std	Z+4, r24	; 0x04
 4c4:	08 95       	ret
 4c6:	10 92 08 3c 	sts	0x3C08, r1	; 0x803c08 <boost_total_timer>
 4ca:	10 92 09 3c 	sts	0x3C09, r1	; 0x803c09 <boost_total_timer+0x1>
 4ce:	10 92 0a 3c 	sts	0x3C0A, r1	; 0x803c0a <boost_total_timer+0x2>
 4d2:	10 92 0b 3c 	sts	0x3C0B, r1	; 0x803c0b <boost_total_timer+0x3>
 4d6:	e0 e0       	ldi	r30, 0x00	; 0
 4d8:	f4 e0       	ldi	r31, 0x04	; 4
 4da:	8f ef       	ldi	r24, 0xFF	; 255
 4dc:	84 83       	std	Z+4, r24	; 0x04
 4de:	84 81       	ldd	r24, Z+4	; 0x04
 4e0:	88 7f       	andi	r24, 0xF8	; 248
 4e2:	84 83       	std	Z+4, r24	; 0x04
 4e4:	e0 e6       	ldi	r30, 0x60	; 96
 4e6:	f4 e0       	ldi	r31, 0x04	; 4
 4e8:	84 81       	ldd	r24, Z+4	; 0x04
 4ea:	84 83       	std	Z+4, r24	; 0x04
 4ec:	84 81       	ldd	r24, Z+4	; 0x04
 4ee:	80 61       	ori	r24, 0x10	; 16
 4f0:	84 83       	std	Z+4, r24	; 0x04
 4f2:	08 95       	ret
 4f4:	e0 e0       	ldi	r30, 0x00	; 0
 4f6:	f4 e0       	ldi	r31, 0x04	; 4
 4f8:	8f ef       	ldi	r24, 0xFF	; 255
 4fa:	84 83       	std	Z+4, r24	; 0x04
 4fc:	84 81       	ldd	r24, Z+4	; 0x04
 4fe:	88 7d       	andi	r24, 0xD8	; 216
 500:	84 83       	std	Z+4, r24	; 0x04
 502:	e0 e6       	ldi	r30, 0x60	; 96
 504:	f4 e0       	ldi	r31, 0x04	; 4
 506:	84 81       	ldd	r24, Z+4	; 0x04
 508:	84 60       	ori	r24, 0x04	; 4
 50a:	84 83       	std	Z+4, r24	; 0x04
 50c:	08 95       	ret
 50e:	5e df       	rcall	.-324    	; 0x3cc <DevModeBlink>
 510:	08 95       	ret
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 518:	08 95       	ret

0000051a <WriteInput>:
 51a:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 51e:	82 30       	cpi	r24, 0x02	; 2
 520:	e1 f0       	breq	.+56     	; 0x55a <WriteInput+0x40>
 522:	18 f4       	brcc	.+6      	; 0x52a <WriteInput+0x10>
 524:	88 23       	and	r24, r24
 526:	39 f0       	breq	.+14     	; 0x536 <WriteInput+0x1c>
 528:	08 95       	ret
 52a:	84 30       	cpi	r24, 0x04	; 4
 52c:	71 f1       	breq	.+92     	; 0x58a <WriteInput+0x70>
 52e:	86 30       	cpi	r24, 0x06	; 6
 530:	09 f4       	brne	.+2      	; 0x534 <WriteInput+0x1a>
 532:	43 c0       	rjmp	.+134    	; 0x5ba <WriteInput+0xa0>
 534:	08 95       	ret
 536:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 53a:	81 11       	cpse	r24, r1
 53c:	07 c0       	rjmp	.+14     	; 0x54c <WriteInput+0x32>
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 544:	10 92 3c 3c 	sts	0x3C3C, r1	; 0x803c3c <BuzzerState>
 548:	b4 dd       	rcall	.-1176   	; 0xb2 <Buzzer>
 54a:	08 95       	ret
 54c:	10 92 39 3c 	sts	0x3C39, r1	; 0x803c39 <State>
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	80 93 3c 3c 	sts	0x3C3C, r24	; 0x803c3c <BuzzerState>
 556:	ad dd       	rcall	.-1190   	; 0xb2 <Buzzer>
 558:	08 95       	ret
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	80 93 3c 3c 	sts	0x3C3C, r24	; 0x803c3c <BuzzerState>
 560:	a8 dd       	rcall	.-1200   	; 0xb2 <Buzzer>
 562:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 566:	81 30       	cpi	r24, 0x01	; 1
 568:	21 f4       	brne	.+8      	; 0x572 <WriteInput+0x58>
 56a:	82 e0       	ldi	r24, 0x02	; 2
 56c:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 570:	08 95       	ret
 572:	82 30       	cpi	r24, 0x02	; 2
 574:	21 f4       	brne	.+8      	; 0x57e <WriteInput+0x64>
 576:	83 e0       	ldi	r24, 0x03	; 3
 578:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 57c:	08 95       	ret
 57e:	83 30       	cpi	r24, 0x03	; 3
 580:	31 f5       	brne	.+76     	; 0x5ce <WriteInput+0xb4>
 582:	84 e0       	ldi	r24, 0x04	; 4
 584:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 588:	08 95       	ret
 58a:	83 e0       	ldi	r24, 0x03	; 3
 58c:	80 93 3c 3c 	sts	0x3C3C, r24	; 0x803c3c <BuzzerState>
 590:	90 dd       	rcall	.-1248   	; 0xb2 <Buzzer>
 592:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 596:	84 30       	cpi	r24, 0x04	; 4
 598:	21 f4       	brne	.+8      	; 0x5a2 <WriteInput+0x88>
 59a:	83 e0       	ldi	r24, 0x03	; 3
 59c:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 5a0:	08 95       	ret
 5a2:	83 30       	cpi	r24, 0x03	; 3
 5a4:	21 f4       	brne	.+8      	; 0x5ae <WriteInput+0x94>
 5a6:	82 e0       	ldi	r24, 0x02	; 2
 5a8:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 5ac:	08 95       	ret
 5ae:	82 30       	cpi	r24, 0x02	; 2
 5b0:	71 f4       	brne	.+28     	; 0x5ce <WriteInput+0xb4>
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
 5b8:	08 95       	ret
 5ba:	80 91 34 3c 	lds	r24, 0x3C34	; 0x803c34 <LightState>
 5be:	81 11       	cpse	r24, r1
 5c0:	04 c0       	rjmp	.+8      	; 0x5ca <WriteInput+0xb0>
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <LightState>
 5c8:	08 95       	ret
 5ca:	10 92 34 3c 	sts	0x3C34, r1	; 0x803c34 <LightState>
 5ce:	08 95       	ret

000005d0 <DecodeCommand>:
 5d0:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 5d4:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 5d8:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 5dc:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 5e0:	aa 27       	eor	r26, r26
 5e2:	bb 27       	eor	r27, r27
 5e4:	8e 37       	cpi	r24, 0x7E	; 126
 5e6:	91 48       	sbci	r25, 0x81	; 129
 5e8:	a1 05       	cpc	r26, r1
 5ea:	b1 05       	cpc	r27, r1
 5ec:	29 f4       	brne	.+10     	; 0x5f8 <DecodeCommand+0x28>
 5ee:	10 92 35 3c 	sts	0x3C35, r1	; 0x803c35 <InputState>
 5f2:	93 df       	rcall	.-218    	; 0x51a <WriteInput>
 5f4:	2a df       	rcall	.-428    	; 0x44a <setState>
 5f6:	08 95       	ret
 5f8:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 5fc:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 600:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 604:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 608:	aa 27       	eor	r26, r26
 60a:	bb 27       	eor	r27, r27
 60c:	8e 3a       	cpi	r24, 0xAE	; 174
 60e:	91 45       	sbci	r25, 0x51	; 81
 610:	a1 05       	cpc	r26, r1
 612:	b1 05       	cpc	r27, r1
 614:	31 f4       	brne	.+12     	; 0x622 <DecodeCommand+0x52>
 616:	84 e0       	ldi	r24, 0x04	; 4
 618:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 61c:	7e df       	rcall	.-260    	; 0x51a <WriteInput>
 61e:	15 df       	rcall	.-470    	; 0x44a <setState>
 620:	08 95       	ret
 622:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 626:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 62a:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 62e:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 632:	aa 27       	eor	r26, r26
 634:	bb 27       	eor	r27, r27
 636:	8e 35       	cpi	r24, 0x5E	; 94
 638:	91 4a       	sbci	r25, 0xA1	; 161
 63a:	a1 05       	cpc	r26, r1
 63c:	b1 05       	cpc	r27, r1
 63e:	31 f4       	brne	.+12     	; 0x64c <DecodeCommand+0x7c>
 640:	82 e0       	ldi	r24, 0x02	; 2
 642:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 646:	69 df       	rcall	.-302    	; 0x51a <WriteInput>
 648:	00 df       	rcall	.-512    	; 0x44a <setState>
 64a:	08 95       	ret
 64c:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 650:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 654:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 658:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 65c:	aa 27       	eor	r26, r26
 65e:	bb 27       	eor	r27, r27
 660:	86 36       	cpi	r24, 0x66	; 102
 662:	99 49       	sbci	r25, 0x99	; 153
 664:	a1 05       	cpc	r26, r1
 666:	b1 05       	cpc	r27, r1
 668:	29 f4       	brne	.+10     	; 0x674 <DecodeCommand+0xa4>
 66a:	86 e0       	ldi	r24, 0x06	; 6
 66c:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 670:	54 df       	rcall	.-344    	; 0x51a <WriteInput>
 672:	eb de       	rcall	.-554    	; 0x44a <setState>
 674:	08 95       	ret

00000676 <IR_Read>:
 676:	80 91 3a 3c 	lds	r24, 0x3C3A	; 0x803c3a <NECState>
 67a:	82 30       	cpi	r24, 0x02	; 2
 67c:	21 f0       	breq	.+8      	; 0x686 <IR_Read+0x10>
 67e:	83 30       	cpi	r24, 0x03	; 3
 680:	09 f4       	brne	.+2      	; 0x684 <IR_Read+0xe>
 682:	f7 c1       	rjmp	.+1006   	; 0xa72 <IR_Read+0x3fc>
 684:	08 95       	ret
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	80 93 22 3c 	sts	0x3C22, r24	; 0x803c22 <idle_flag>
 68e:	90 93 23 3c 	sts	0x3C23, r25	; 0x803c23 <idle_flag+0x1>
 692:	f8 94       	cli
 694:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 698:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 69c:	78 94       	sei
 69e:	71 de       	rcall	.-798    	; 0x382 <disableIR_ISR>
 6a0:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 6a4:	83 fd       	sbrc	r24, 3
 6a6:	10 c0       	rjmp	.+32     	; 0x6c8 <IR_Read+0x52>
 6a8:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 6ac:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 6b0:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 6b4:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 6b8:	aa e7       	ldi	r26, 0x7A	; 122
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	1d d4       	rcall	.+2106   	; 0xef8 <__muluhisi3>
 6be:	69 32       	cpi	r22, 0x29	; 41
 6c0:	73 42       	sbci	r23, 0x23	; 35
 6c2:	81 05       	cpc	r24, r1
 6c4:	91 05       	cpc	r25, r1
 6c6:	64 f3       	brlt	.-40     	; 0x6a0 <IR_Read+0x2a>
 6c8:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 6cc:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 6d0:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 6d4:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 6d8:	f8 94       	cli
 6da:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 6de:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 6e2:	78 94       	sei
 6e4:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 6e8:	83 ff       	sbrs	r24, 3
 6ea:	10 c0       	rjmp	.+32     	; 0x70c <IR_Read+0x96>
 6ec:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 6f0:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 6f4:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 6f8:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 6fc:	aa e7       	ldi	r26, 0x7A	; 122
 6fe:	b0 e0       	ldi	r27, 0x00	; 0
 700:	fb d3       	rcall	.+2038   	; 0xef8 <__muluhisi3>
 702:	65 39       	cpi	r22, 0x95	; 149
 704:	71 41       	sbci	r23, 0x11	; 17
 706:	81 05       	cpc	r24, r1
 708:	91 05       	cpc	r25, r1
 70a:	64 f3       	brlt	.-40     	; 0x6e4 <IR_Read+0x6e>
 70c:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 710:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 714:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 718:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 71c:	aa e7       	ldi	r26, 0x7A	; 122
 71e:	b0 e0       	ldi	r27, 0x00	; 0
 720:	eb d3       	rcall	.+2006   	; 0xef8 <__muluhisi3>
 722:	6d 3f       	cpi	r22, 0xFD	; 253
 724:	78 40       	sbci	r23, 0x08	; 8
 726:	81 05       	cpc	r24, r1
 728:	91 05       	cpc	r25, r1
 72a:	0c f0       	brlt	.+2      	; 0x72e <IR_Read+0xb8>
 72c:	41 c0       	rjmp	.+130    	; 0x7b0 <IR_Read+0x13a>
 72e:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 732:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 736:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 73a:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 73e:	30 de       	rcall	.-928    	; 0x3a0 <disableRTC>
 740:	3f de       	rcall	.-898    	; 0x3c0 <enableRTC>
 742:	f8 94       	cli
 744:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 748:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 74c:	78 94       	sei
 74e:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 752:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 756:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 75a:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 75e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 762:	83 fd       	sbrc	r24, 3
 764:	10 c0       	rjmp	.+32     	; 0x786 <IR_Read+0x110>
 766:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 76a:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 76e:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 772:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 776:	aa e7       	ldi	r26, 0x7A	; 122
 778:	b0 e0       	ldi	r27, 0x00	; 0
 77a:	be d3       	rcall	.+1916   	; 0xef8 <__muluhisi3>
 77c:	69 35       	cpi	r22, 0x59	; 89
 77e:	72 40       	sbci	r23, 0x02	; 2
 780:	81 05       	cpc	r24, r1
 782:	91 05       	cpc	r25, r1
 784:	64 f3       	brlt	.-40     	; 0x75e <IR_Read+0xe8>
 786:	d0 dd       	rcall	.-1120   	; 0x328 <GenerateRepeatCode>
 788:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 78c:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 790:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 794:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 798:	10 92 22 3c 	sts	0x3C22, r1	; 0x803c22 <idle_flag>
 79c:	10 92 23 3c 	sts	0x3C23, r1	; 0x803c23 <idle_flag+0x1>
 7a0:	f8 94       	cli
 7a2:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 7a6:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 7aa:	78 94       	sei
 7ac:	ef dd       	rcall	.-1058   	; 0x38c <enableIR_ISR>
 7ae:	08 95       	ret
 7b0:	f8 94       	cli
 7b2:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 7b6:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 7ba:	78 94       	sei
 7bc:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 7c0:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 7c4:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 7c8:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 7cc:	10 92 22 3c 	sts	0x3C22, r1	; 0x803c22 <idle_flag>
 7d0:	10 92 23 3c 	sts	0x3C23, r1	; 0x803c23 <idle_flag+0x1>
 7d4:	81 e0       	ldi	r24, 0x01	; 1
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	80 93 20 3c 	sts	0x3C20, r24	; 0x803c20 <command_counter_flag>
 7dc:	90 93 21 3c 	sts	0x3C21, r25	; 0x803c21 <command_counter_flag+0x1>
 7e0:	10 92 37 3c 	sts	0x3C37, r1	; 0x803c37 <i>
 7e4:	10 92 38 3c 	sts	0x3C38, r1	; 0x803c38 <i+0x1>
 7e8:	ca c0       	rjmp	.+404    	; 0x97e <IR_Read+0x308>
 7ea:	10 92 1c 3c 	sts	0x3C1C, r1	; 0x803c1c <tick_counter>
 7ee:	10 92 1d 3c 	sts	0x3C1D, r1	; 0x803c1d <tick_counter+0x1>
 7f2:	10 92 1e 3c 	sts	0x3C1E, r1	; 0x803c1e <tick_counter+0x2>
 7f6:	10 92 1f 3c 	sts	0x3C1F, r1	; 0x803c1f <tick_counter+0x3>
 7fa:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 7fe:	83 fd       	sbrc	r24, 3
 800:	10 c0       	rjmp	.+32     	; 0x822 <IR_Read+0x1ac>
 802:	20 91 1c 3c 	lds	r18, 0x3C1C	; 0x803c1c <tick_counter>
 806:	30 91 1d 3c 	lds	r19, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 80a:	40 91 1e 3c 	lds	r20, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 80e:	50 91 1f 3c 	lds	r21, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 812:	aa e7       	ldi	r26, 0x7A	; 122
 814:	b0 e0       	ldi	r27, 0x00	; 0
 816:	70 d3       	rcall	.+1760   	; 0xef8 <__muluhisi3>
 818:	6b 38       	cpi	r22, 0x8B	; 139
 81a:	72 40       	sbci	r23, 0x02	; 2
 81c:	81 05       	cpc	r24, r1
 81e:	91 05       	cpc	r25, r1
 820:	64 f3       	brlt	.-40     	; 0x7fa <IR_Read+0x184>
 822:	10 92 1c 3c 	sts	0x3C1C, r1	; 0x803c1c <tick_counter>
 826:	10 92 1d 3c 	sts	0x3C1D, r1	; 0x803c1d <tick_counter+0x1>
 82a:	10 92 1e 3c 	sts	0x3C1E, r1	; 0x803c1e <tick_counter+0x2>
 82e:	10 92 1f 3c 	sts	0x3C1F, r1	; 0x803c1f <tick_counter+0x3>
 832:	b6 dd       	rcall	.-1172   	; 0x3a0 <disableRTC>
 834:	c5 dd       	rcall	.-1142   	; 0x3c0 <enableRTC>
 836:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 83a:	83 ff       	sbrs	r24, 3
 83c:	10 c0       	rjmp	.+32     	; 0x85e <IR_Read+0x1e8>
 83e:	20 91 1c 3c 	lds	r18, 0x3C1C	; 0x803c1c <tick_counter>
 842:	30 91 1d 3c 	lds	r19, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 846:	40 91 1e 3c 	lds	r20, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 84a:	50 91 1f 3c 	lds	r21, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 84e:	aa e7       	ldi	r26, 0x7A	; 122
 850:	b0 e0       	ldi	r27, 0x00	; 0
 852:	52 d3       	rcall	.+1700   	; 0xef8 <__muluhisi3>
 854:	69 30       	cpi	r22, 0x09	; 9
 856:	77 40       	sbci	r23, 0x07	; 7
 858:	81 05       	cpc	r24, r1
 85a:	91 05       	cpc	r25, r1
 85c:	64 f3       	brlt	.-40     	; 0x836 <IR_Read+0x1c0>
 85e:	80 91 37 3c 	lds	r24, 0x3C37	; 0x803c37 <i>
 862:	90 91 38 3c 	lds	r25, 0x3C38	; 0x803c38 <i+0x1>
 866:	80 97       	sbiw	r24, 0x20	; 32
 868:	89 f4       	brne	.+34     	; 0x88c <IR_Read+0x216>
 86a:	20 91 1c 3c 	lds	r18, 0x3C1C	; 0x803c1c <tick_counter>
 86e:	30 91 1d 3c 	lds	r19, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 872:	40 91 1e 3c 	lds	r20, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 876:	50 91 1f 3c 	lds	r21, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 87a:	aa e7       	ldi	r26, 0x7A	; 122
 87c:	b0 e0       	ldi	r27, 0x00	; 0
 87e:	3c d3       	rcall	.+1656   	; 0xef8 <__muluhisi3>
 880:	69 3e       	cpi	r22, 0xE9	; 233
 882:	73 40       	sbci	r23, 0x03	; 3
 884:	81 05       	cpc	r24, r1
 886:	91 05       	cpc	r25, r1
 888:	0c f0       	brlt	.+2      	; 0x88c <IR_Read+0x216>
 88a:	80 c0       	rjmp	.+256    	; 0x98c <IR_Read+0x316>
 88c:	20 91 1c 3c 	lds	r18, 0x3C1C	; 0x803c1c <tick_counter>
 890:	30 91 1d 3c 	lds	r19, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 894:	40 91 1e 3c 	lds	r20, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 898:	50 91 1f 3c 	lds	r21, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 89c:	aa e7       	ldi	r26, 0x7A	; 122
 89e:	b0 e0       	ldi	r27, 0x00	; 0
 8a0:	2b d3       	rcall	.+1622   	; 0xef8 <__muluhisi3>
 8a2:	69 3e       	cpi	r22, 0xE9	; 233
 8a4:	73 40       	sbci	r23, 0x03	; 3
 8a6:	81 05       	cpc	r24, r1
 8a8:	91 05       	cpc	r25, r1
 8aa:	b4 f1       	brlt	.+108    	; 0x918 <IR_Read+0x2a2>
 8ac:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 8b0:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 8b4:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 8b8:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 8bc:	88 0f       	add	r24, r24
 8be:	99 1f       	adc	r25, r25
 8c0:	aa 1f       	adc	r26, r26
 8c2:	bb 1f       	adc	r27, r27
 8c4:	80 93 16 3c 	sts	0x3C16, r24	; 0x803c16 <command_register>
 8c8:	90 93 17 3c 	sts	0x3C17, r25	; 0x803c17 <command_register+0x1>
 8cc:	a0 93 18 3c 	sts	0x3C18, r26	; 0x803c18 <command_register+0x2>
 8d0:	b0 93 19 3c 	sts	0x3C19, r27	; 0x803c19 <command_register+0x3>
 8d4:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 8d8:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 8dc:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 8e0:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 8e4:	81 60       	ori	r24, 0x01	; 1
 8e6:	80 93 16 3c 	sts	0x3C16, r24	; 0x803c16 <command_register>
 8ea:	90 93 17 3c 	sts	0x3C17, r25	; 0x803c17 <command_register+0x1>
 8ee:	a0 93 18 3c 	sts	0x3C18, r26	; 0x803c18 <command_register+0x2>
 8f2:	b0 93 19 3c 	sts	0x3C19, r27	; 0x803c19 <command_register+0x3>
 8f6:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <tick_counter>
 8fa:	90 91 1d 3c 	lds	r25, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 8fe:	a0 91 1e 3c 	lds	r26, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 902:	b0 91 1f 3c 	lds	r27, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 906:	80 93 1c 3c 	sts	0x3C1C, r24	; 0x803c1c <tick_counter>
 90a:	90 93 1d 3c 	sts	0x3C1D, r25	; 0x803c1d <tick_counter+0x1>
 90e:	a0 93 1e 3c 	sts	0x3C1E, r26	; 0x803c1e <tick_counter+0x2>
 912:	b0 93 1f 3c 	sts	0x3C1F, r27	; 0x803c1f <tick_counter+0x3>
 916:	24 c0       	rjmp	.+72     	; 0x960 <IR_Read+0x2ea>
 918:	80 91 16 3c 	lds	r24, 0x3C16	; 0x803c16 <command_register>
 91c:	90 91 17 3c 	lds	r25, 0x3C17	; 0x803c17 <command_register+0x1>
 920:	a0 91 18 3c 	lds	r26, 0x3C18	; 0x803c18 <command_register+0x2>
 924:	b0 91 19 3c 	lds	r27, 0x3C19	; 0x803c19 <command_register+0x3>
 928:	88 0f       	add	r24, r24
 92a:	99 1f       	adc	r25, r25
 92c:	aa 1f       	adc	r26, r26
 92e:	bb 1f       	adc	r27, r27
 930:	80 93 16 3c 	sts	0x3C16, r24	; 0x803c16 <command_register>
 934:	90 93 17 3c 	sts	0x3C17, r25	; 0x803c17 <command_register+0x1>
 938:	a0 93 18 3c 	sts	0x3C18, r26	; 0x803c18 <command_register+0x2>
 93c:	b0 93 19 3c 	sts	0x3C19, r27	; 0x803c19 <command_register+0x3>
 940:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <tick_counter>
 944:	90 91 1d 3c 	lds	r25, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 948:	a0 91 1e 3c 	lds	r26, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 94c:	b0 91 1f 3c 	lds	r27, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 950:	80 93 1c 3c 	sts	0x3C1C, r24	; 0x803c1c <tick_counter>
 954:	90 93 1d 3c 	sts	0x3C1D, r25	; 0x803c1d <tick_counter+0x1>
 958:	a0 93 1e 3c 	sts	0x3C1E, r26	; 0x803c1e <tick_counter+0x2>
 95c:	b0 93 1f 3c 	sts	0x3C1F, r27	; 0x803c1f <tick_counter+0x3>
 960:	f8 94       	cli
 962:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 966:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 96a:	78 94       	sei
 96c:	80 91 37 3c 	lds	r24, 0x3C37	; 0x803c37 <i>
 970:	90 91 38 3c 	lds	r25, 0x3C38	; 0x803c38 <i+0x1>
 974:	01 96       	adiw	r24, 0x01	; 1
 976:	80 93 37 3c 	sts	0x3C37, r24	; 0x803c37 <i>
 97a:	90 93 38 3c 	sts	0x3C38, r25	; 0x803c38 <i+0x1>
 97e:	80 91 37 3c 	lds	r24, 0x3C37	; 0x803c37 <i>
 982:	90 91 38 3c 	lds	r25, 0x3C38	; 0x803c38 <i+0x1>
 986:	81 97       	sbiw	r24, 0x21	; 33
 988:	0c f4       	brge	.+2      	; 0x98c <IR_Read+0x316>
 98a:	2f cf       	rjmp	.-418    	; 0x7ea <IR_Read+0x174>
 98c:	bb dc       	rcall	.-1674   	; 0x304 <VerifyAddress>
 98e:	81 11       	cpse	r24, r1
 990:	1f de       	rcall	.-962    	; 0x5d0 <DecodeCommand>
 992:	81 e0       	ldi	r24, 0x01	; 1
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	80 93 22 3c 	sts	0x3C22, r24	; 0x803c22 <idle_flag>
 99a:	90 93 23 3c 	sts	0x3C23, r25	; 0x803c23 <idle_flag+0x1>
 99e:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 9a2:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 9a6:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 9aa:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 9ae:	f8 94       	cli
 9b0:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 9b4:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 9b8:	78 94       	sei
 9ba:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__RODATA_PM_OFFSET__+0x7fc408>
 9be:	83 ff       	sbrs	r24, 3
 9c0:	10 c0       	rjmp	.+32     	; 0x9e2 <IR_Read+0x36c>
 9c2:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 9c6:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 9ca:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 9ce:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 9d2:	aa e7       	ldi	r26, 0x7A	; 122
 9d4:	b0 e0       	ldi	r27, 0x00	; 0
 9d6:	90 d2       	rcall	.+1312   	; 0xef8 <__muluhisi3>
 9d8:	61 35       	cpi	r22, 0x51	; 81
 9da:	73 4c       	sbci	r23, 0xC3	; 195
 9dc:	81 05       	cpc	r24, r1
 9de:	91 05       	cpc	r25, r1
 9e0:	64 f3       	brlt	.-40     	; 0x9ba <IR_Read+0x344>
 9e2:	20 91 24 3c 	lds	r18, 0x3C24	; 0x803c24 <counter>
 9e6:	30 91 25 3c 	lds	r19, 0x3C25	; 0x803c25 <counter+0x1>
 9ea:	40 91 26 3c 	lds	r20, 0x3C26	; 0x803c26 <counter+0x2>
 9ee:	50 91 27 3c 	lds	r21, 0x3C27	; 0x803c27 <counter+0x3>
 9f2:	aa e7       	ldi	r26, 0x7A	; 122
 9f4:	b0 e0       	ldi	r27, 0x00	; 0
 9f6:	80 d2       	rcall	.+1280   	; 0xef8 <__muluhisi3>
 9f8:	60 34       	cpi	r22, 0x40	; 64
 9fa:	7c 49       	sbci	r23, 0x9C	; 156
 9fc:	81 05       	cpc	r24, r1
 9fe:	91 05       	cpc	r25, r1
 a00:	24 f1       	brlt	.+72     	; 0xa4a <IR_Read+0x3d4>
 a02:	10 92 10 3c 	sts	0x3C10, r1	; 0x803c10 <hold_flag>
 a06:	10 92 11 3c 	sts	0x3C11, r1	; 0x803c11 <hold_flag+0x1>
 a0a:	10 92 12 3c 	sts	0x3C12, r1	; 0x803c12 <hold_counter>
 a0e:	10 92 13 3c 	sts	0x3C13, r1	; 0x803c13 <hold_counter+0x1>
 a12:	10 92 14 3c 	sts	0x3C14, r1	; 0x803c14 <hold_counter+0x2>
 a16:	10 92 15 3c 	sts	0x3C15, r1	; 0x803c15 <hold_counter+0x3>
 a1a:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 a1e:	81 30       	cpi	r24, 0x01	; 1
 a20:	19 f4       	brne	.+6      	; 0xa28 <IR_Read+0x3b2>
 a22:	10 92 35 3c 	sts	0x3C35, r1	; 0x803c35 <InputState>
 a26:	11 c0       	rjmp	.+34     	; 0xa4a <IR_Read+0x3d4>
 a28:	83 30       	cpi	r24, 0x03	; 3
 a2a:	21 f4       	brne	.+8      	; 0xa34 <IR_Read+0x3be>
 a2c:	82 e0       	ldi	r24, 0x02	; 2
 a2e:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 a32:	0b c0       	rjmp	.+22     	; 0xa4a <IR_Read+0x3d4>
 a34:	85 30       	cpi	r24, 0x05	; 5
 a36:	21 f4       	brne	.+8      	; 0xa40 <IR_Read+0x3ca>
 a38:	84 e0       	ldi	r24, 0x04	; 4
 a3a:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 a3e:	05 c0       	rjmp	.+10     	; 0xa4a <IR_Read+0x3d4>
 a40:	87 30       	cpi	r24, 0x07	; 7
 a42:	19 f4       	brne	.+6      	; 0xa4a <IR_Read+0x3d4>
 a44:	86 e0       	ldi	r24, 0x06	; 6
 a46:	80 93 35 3c 	sts	0x3C35, r24	; 0x803c35 <InputState>
 a4a:	10 92 22 3c 	sts	0x3C22, r1	; 0x803c22 <idle_flag>
 a4e:	10 92 23 3c 	sts	0x3C23, r1	; 0x803c23 <idle_flag+0x1>
 a52:	10 92 1c 3c 	sts	0x3C1C, r1	; 0x803c1c <tick_counter>
 a56:	10 92 1d 3c 	sts	0x3C1D, r1	; 0x803c1d <tick_counter+0x1>
 a5a:	10 92 1e 3c 	sts	0x3C1E, r1	; 0x803c1e <tick_counter+0x2>
 a5e:	10 92 1f 3c 	sts	0x3C1F, r1	; 0x803c1f <tick_counter+0x3>
 a62:	f8 94       	cli
 a64:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__RODATA_PM_OFFSET__+0x7fc148>
 a68:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__RODATA_PM_OFFSET__+0x7fc149>
 a6c:	78 94       	sei
 a6e:	8e dc       	rcall	.-1764   	; 0x38c <enableIR_ISR>
 a70:	08 95       	ret
 a72:	10 92 24 3c 	sts	0x3C24, r1	; 0x803c24 <counter>
 a76:	10 92 25 3c 	sts	0x3C25, r1	; 0x803c25 <counter+0x1>
 a7a:	10 92 26 3c 	sts	0x3C26, r1	; 0x803c26 <counter+0x2>
 a7e:	10 92 27 3c 	sts	0x3C27, r1	; 0x803c27 <counter+0x3>
 a82:	08 95       	ret

00000a84 <main>:
//Global Variables
int volatile state = 0;
int volatile debug_flag = 0;
int main(void)
{
	CCP = 0xD8;
 a84:	88 ed       	ldi	r24, 0xD8	; 216
 a86:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKLOCK =0x00;
 a88:	e0 e6       	ldi	r30, 0x60	; 96
 a8a:	f0 e0       	ldi	r31, 0x00	; 0
 a8c:	12 82       	std	Z+2, r1	; 0x02
	CCP = 0xD8;
 a8e:	84 bf       	out	0x34, r24	; 52
    CLKCTRL.MCLKCTRLB = 0;
 a90:	11 82       	std	Z+1, r1	; 0x01
	CCP = 0xD8;
 a92:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKLOCK =0x01;
 a94:	81 e0       	ldi	r24, 0x01	; 1
 a96:	82 83       	std	Z+2, r24	; 0x02
	CCP = 0xD8;
	CLKCTRL.MCLKCTRLB = 0x13;
	CCP = 0xD8;
	CLKCTRL.MCLKLOCK =0x01;
	*/
	PORTD.DIR = (1<<LED_ON_OFF);
 a98:	e0 e6       	ldi	r30, 0x60	; 96
 a9a:	f4 e0       	ldi	r31, 0x04	; 4
 a9c:	82 e0       	ldi	r24, 0x02	; 2
 a9e:	80 83       	st	Z, r24
	PORTD.OUT = 0x00; // Close All LEDs
 aa0:	14 82       	std	Z+4, r1	; 0x04
	CPUINT.LVL1VEC = RTC_CNT_vect_num;
 aa2:	83 e0       	ldi	r24, 0x03	; 3
 aa4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__RODATA_PM_OFFSET__+0x7fc113>
	Initialize();
 aa8:	f4 db       	rcall	.-2072   	; 0x292 <Initialize>
 aaa:	ff cf       	rjmp	.-2      	; 0xaaa <main+0x26>

00000aac <__vector_6>:

/************************************************************************/
/* Timer interrupt increases a counter every 1ms.                                                                     */
/************************************************************************/

ISR(PORTA_PORT_vect){
 aac:	1f 92       	push	r1
 aae:	0f 92       	push	r0
 ab0:	0f b6       	in	r0, 0x3f	; 63
 ab2:	0f 92       	push	r0
 ab4:	11 24       	eor	r1, r1
 ab6:	2f 93       	push	r18
 ab8:	3f 93       	push	r19
 aba:	4f 93       	push	r20
 abc:	5f 93       	push	r21
 abe:	6f 93       	push	r22
 ac0:	7f 93       	push	r23
 ac2:	8f 93       	push	r24
 ac4:	9f 93       	push	r25
 ac6:	af 93       	push	r26
 ac8:	bf 93       	push	r27
 aca:	ef 93       	push	r30
 acc:	ff 93       	push	r31
	NECState.currentState = COMMAND;
 ace:	82 e0       	ldi	r24, 0x02	; 2
 ad0:	80 93 3a 3c 	sts	0x3C3A, r24	; 0x803c3a <NECState>
	IR_Read(); 
 ad4:	d0 dd       	rcall	.-1120   	; 0x676 <IR_Read>
}
 ad6:	ff 91       	pop	r31
 ad8:	ef 91       	pop	r30
 ada:	bf 91       	pop	r27
 adc:	af 91       	pop	r26
 ade:	9f 91       	pop	r25
 ae0:	8f 91       	pop	r24
 ae2:	7f 91       	pop	r23
 ae4:	6f 91       	pop	r22
 ae6:	5f 91       	pop	r21
 ae8:	4f 91       	pop	r20
 aea:	3f 91       	pop	r19
 aec:	2f 91       	pop	r18
 aee:	0f 90       	pop	r0
 af0:	0f be       	out	0x3f, r0	; 63
 af2:	0f 90       	pop	r0
 af4:	1f 90       	pop	r1
 af6:	18 95       	reti

00000af8 <__vector_3>:
ISR(RTC_CNT_vect){
 af8:	1f 92       	push	r1
 afa:	0f 92       	push	r0
 afc:	0f b6       	in	r0, 0x3f	; 63
 afe:	0f 92       	push	r0
 b00:	11 24       	eor	r1, r1
 b02:	2f 93       	push	r18
 b04:	3f 93       	push	r19
 b06:	4f 93       	push	r20
 b08:	5f 93       	push	r21
 b0a:	6f 93       	push	r22
 b0c:	7f 93       	push	r23
 b0e:	8f 93       	push	r24
 b10:	9f 93       	push	r25
 b12:	af 93       	push	r26
 b14:	bf 93       	push	r27
 b16:	ef 93       	push	r30
 b18:	ff 93       	push	r31
	 RTC.INTFLAGS = RTC_OVF_bm;
 b1a:	81 e0       	ldi	r24, 0x01	; 1
 b1c:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__RODATA_PM_OFFSET__+0x7fc143>
	 
	if(idle_flag == 1){
 b20:	80 91 22 3c 	lds	r24, 0x3C22	; 0x803c22 <idle_flag>
 b24:	90 91 23 3c 	lds	r25, 0x3C23	; 0x803c23 <idle_flag+0x1>
 b28:	01 97       	sbiw	r24, 0x01	; 1
 b2a:	99 f4       	brne	.+38     	; 0xb52 <__vector_3+0x5a>
		counter++;
 b2c:	80 91 24 3c 	lds	r24, 0x3C24	; 0x803c24 <counter>
 b30:	90 91 25 3c 	lds	r25, 0x3C25	; 0x803c25 <counter+0x1>
 b34:	a0 91 26 3c 	lds	r26, 0x3C26	; 0x803c26 <counter+0x2>
 b38:	b0 91 27 3c 	lds	r27, 0x3C27	; 0x803c27 <counter+0x3>
 b3c:	01 96       	adiw	r24, 0x01	; 1
 b3e:	a1 1d       	adc	r26, r1
 b40:	b1 1d       	adc	r27, r1
 b42:	80 93 24 3c 	sts	0x3C24, r24	; 0x803c24 <counter>
 b46:	90 93 25 3c 	sts	0x3C25, r25	; 0x803c25 <counter+0x1>
 b4a:	a0 93 26 3c 	sts	0x3C26, r26	; 0x803c26 <counter+0x2>
 b4e:	b0 93 27 3c 	sts	0x3C27, r27	; 0x803c27 <counter+0x3>
		}
	if(command_counter_flag==1){
 b52:	80 91 20 3c 	lds	r24, 0x3C20	; 0x803c20 <command_counter_flag>
 b56:	90 91 21 3c 	lds	r25, 0x3C21	; 0x803c21 <command_counter_flag+0x1>
 b5a:	01 97       	sbiw	r24, 0x01	; 1
 b5c:	e1 f4       	brne	.+56     	; 0xb96 <__vector_3+0x9e>
		tick_counter++;
 b5e:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <tick_counter>
 b62:	90 91 1d 3c 	lds	r25, 0x3C1D	; 0x803c1d <tick_counter+0x1>
 b66:	a0 91 1e 3c 	lds	r26, 0x3C1E	; 0x803c1e <tick_counter+0x2>
 b6a:	b0 91 1f 3c 	lds	r27, 0x3C1F	; 0x803c1f <tick_counter+0x3>
 b6e:	01 96       	adiw	r24, 0x01	; 1
 b70:	a1 1d       	adc	r26, r1
 b72:	b1 1d       	adc	r27, r1
 b74:	80 93 1c 3c 	sts	0x3C1C, r24	; 0x803c1c <tick_counter>
 b78:	90 93 1d 3c 	sts	0x3C1D, r25	; 0x803c1d <tick_counter+0x1>
 b7c:	a0 93 1e 3c 	sts	0x3C1E, r26	; 0x803c1e <tick_counter+0x2>
 b80:	b0 93 1f 3c 	sts	0x3C1F, r27	; 0x803c1f <tick_counter+0x3>
		total_tick_counter++;	
 b84:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <total_tick_counter>
 b88:	90 91 1b 3c 	lds	r25, 0x3C1B	; 0x803c1b <total_tick_counter+0x1>
 b8c:	01 96       	adiw	r24, 0x01	; 1
 b8e:	80 93 1a 3c 	sts	0x3C1A, r24	; 0x803c1a <total_tick_counter>
 b92:	90 93 1b 3c 	sts	0x3C1B, r25	; 0x803c1b <total_tick_counter+0x1>
		}
	if(State.currentState==BOOST){
 b96:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 b9a:	84 30       	cpi	r24, 0x04	; 4
 b9c:	09 f0       	breq	.+2      	; 0xba0 <__vector_3+0xa8>
 b9e:	58 c0       	rjmp	.+176    	; 0xc50 <__vector_3+0x158>
		boost_timer++;
 ba0:	80 91 0c 3c 	lds	r24, 0x3C0C	; 0x803c0c <boost_timer>
 ba4:	90 91 0d 3c 	lds	r25, 0x3C0D	; 0x803c0d <boost_timer+0x1>
 ba8:	a0 91 0e 3c 	lds	r26, 0x3C0E	; 0x803c0e <boost_timer+0x2>
 bac:	b0 91 0f 3c 	lds	r27, 0x3C0F	; 0x803c0f <boost_timer+0x3>
 bb0:	01 96       	adiw	r24, 0x01	; 1
 bb2:	a1 1d       	adc	r26, r1
 bb4:	b1 1d       	adc	r27, r1
 bb6:	80 93 0c 3c 	sts	0x3C0C, r24	; 0x803c0c <boost_timer>
 bba:	90 93 0d 3c 	sts	0x3C0D, r25	; 0x803c0d <boost_timer+0x1>
 bbe:	a0 93 0e 3c 	sts	0x3C0E, r26	; 0x803c0e <boost_timer+0x2>
 bc2:	b0 93 0f 3c 	sts	0x3C0F, r27	; 0x803c0f <boost_timer+0x3>
		boost_total_timer++;
 bc6:	80 91 08 3c 	lds	r24, 0x3C08	; 0x803c08 <boost_total_timer>
 bca:	90 91 09 3c 	lds	r25, 0x3C09	; 0x803c09 <boost_total_timer+0x1>
 bce:	a0 91 0a 3c 	lds	r26, 0x3C0A	; 0x803c0a <boost_total_timer+0x2>
 bd2:	b0 91 0b 3c 	lds	r27, 0x3C0B	; 0x803c0b <boost_total_timer+0x3>
 bd6:	01 96       	adiw	r24, 0x01	; 1
 bd8:	a1 1d       	adc	r26, r1
 bda:	b1 1d       	adc	r27, r1
 bdc:	80 93 08 3c 	sts	0x3C08, r24	; 0x803c08 <boost_total_timer>
 be0:	90 93 09 3c 	sts	0x3C09, r25	; 0x803c09 <boost_total_timer+0x1>
 be4:	a0 93 0a 3c 	sts	0x3C0A, r26	; 0x803c0a <boost_total_timer+0x2>
 be8:	b0 93 0b 3c 	sts	0x3C0B, r27	; 0x803c0b <boost_total_timer+0x3>
		if(boost_timer*RTC_TICK >= ONE_SEC){ // 1sec
 bec:	20 91 0c 3c 	lds	r18, 0x3C0C	; 0x803c0c <boost_timer>
 bf0:	30 91 0d 3c 	lds	r19, 0x3C0D	; 0x803c0d <boost_timer+0x1>
 bf4:	40 91 0e 3c 	lds	r20, 0x3C0E	; 0x803c0e <boost_timer+0x2>
 bf8:	50 91 0f 3c 	lds	r21, 0x3C0F	; 0x803c0f <boost_timer+0x3>
 bfc:	aa e7       	ldi	r26, 0x7A	; 122
 bfe:	b0 e0       	ldi	r27, 0x00	; 0
 c00:	7b d1       	rcall	.+758    	; 0xef8 <__muluhisi3>
 c02:	60 34       	cpi	r22, 0x40	; 64
 c04:	72 44       	sbci	r23, 0x42	; 66
 c06:	8f 40       	sbci	r24, 0x0F	; 15
 c08:	91 05       	cpc	r25, r1
 c0a:	70 f0       	brcs	.+28     	; 0xc28 <__vector_3+0x130>
			PORTA.OUT ^= (1<<LED_4);
 c0c:	e0 e0       	ldi	r30, 0x00	; 0
 c0e:	f4 e0       	ldi	r31, 0x04	; 4
 c10:	94 81       	ldd	r25, Z+4	; 0x04
 c12:	80 e2       	ldi	r24, 0x20	; 32
 c14:	89 27       	eor	r24, r25
 c16:	84 83       	std	Z+4, r24	; 0x04
			boost_timer=0;
 c18:	10 92 0c 3c 	sts	0x3C0C, r1	; 0x803c0c <boost_timer>
 c1c:	10 92 0d 3c 	sts	0x3C0D, r1	; 0x803c0d <boost_timer+0x1>
 c20:	10 92 0e 3c 	sts	0x3C0E, r1	; 0x803c0e <boost_timer+0x2>
 c24:	10 92 0f 3c 	sts	0x3C0F, r1	; 0x803c0f <boost_timer+0x3>
		}
		if(boost_total_timer*RTC_TICK>=BOOST_MAX_30SEC){
 c28:	20 91 08 3c 	lds	r18, 0x3C08	; 0x803c08 <boost_total_timer>
 c2c:	30 91 09 3c 	lds	r19, 0x3C09	; 0x803c09 <boost_total_timer+0x1>
 c30:	40 91 0a 3c 	lds	r20, 0x3C0A	; 0x803c0a <boost_total_timer+0x2>
 c34:	50 91 0b 3c 	lds	r21, 0x3C0B	; 0x803c0b <boost_total_timer+0x3>
 c38:	aa e7       	ldi	r26, 0x7A	; 122
 c3a:	b0 e0       	ldi	r27, 0x00	; 0
 c3c:	5d d1       	rcall	.+698    	; 0xef8 <__muluhisi3>
 c3e:	60 38       	cpi	r22, 0x80	; 128
 c40:	73 4c       	sbci	r23, 0xC3	; 195
 c42:	89 4c       	sbci	r24, 0xC9	; 201
 c44:	91 40       	sbci	r25, 0x01	; 1
 c46:	20 f0       	brcs	.+8      	; 0xc50 <__vector_3+0x158>
			State.currentState = THREE;
 c48:	83 e0       	ldi	r24, 0x03	; 3
 c4a:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
			setState();
 c4e:	fd db       	rcall	.-2054   	; 0x44a <setState>
		}
	}
	if(hold_flag==1){
 c50:	80 91 10 3c 	lds	r24, 0x3C10	; 0x803c10 <hold_flag>
 c54:	90 91 11 3c 	lds	r25, 0x3C11	; 0x803c11 <hold_flag+0x1>
 c58:	01 97       	sbiw	r24, 0x01	; 1
 c5a:	09 f0       	breq	.+2      	; 0xc5e <__vector_3+0x166>
 c5c:	81 c0       	rjmp	.+258    	; 0xd60 <__vector_3+0x268>
		hold_counter++;
 c5e:	80 91 12 3c 	lds	r24, 0x3C12	; 0x803c12 <hold_counter>
 c62:	90 91 13 3c 	lds	r25, 0x3C13	; 0x803c13 <hold_counter+0x1>
 c66:	a0 91 14 3c 	lds	r26, 0x3C14	; 0x803c14 <hold_counter+0x2>
 c6a:	b0 91 15 3c 	lds	r27, 0x3C15	; 0x803c15 <hold_counter+0x3>
 c6e:	01 96       	adiw	r24, 0x01	; 1
 c70:	a1 1d       	adc	r26, r1
 c72:	b1 1d       	adc	r27, r1
 c74:	80 93 12 3c 	sts	0x3C12, r24	; 0x803c12 <hold_counter>
 c78:	90 93 13 3c 	sts	0x3C13, r25	; 0x803c13 <hold_counter+0x1>
 c7c:	a0 93 14 3c 	sts	0x3C14, r26	; 0x803c14 <hold_counter+0x2>
 c80:	b0 93 15 3c 	sts	0x3C15, r27	; 0x803c15 <hold_counter+0x3>
		if((hold_counter*RTC_TICK>=2*ONE_SEC)&&InputState.currentState== POWER_HOLD){//After 4 sec power button press, indicate with buzzer and wait for 2 sec 
 c84:	20 91 12 3c 	lds	r18, 0x3C12	; 0x803c12 <hold_counter>
 c88:	30 91 13 3c 	lds	r19, 0x3C13	; 0x803c13 <hold_counter+0x1>
 c8c:	40 91 14 3c 	lds	r20, 0x3C14	; 0x803c14 <hold_counter+0x2>
 c90:	50 91 15 3c 	lds	r21, 0x3C15	; 0x803c15 <hold_counter+0x3>
 c94:	aa e7       	ldi	r26, 0x7A	; 122
 c96:	b0 e0       	ldi	r27, 0x00	; 0
 c98:	2f d1       	rcall	.+606    	; 0xef8 <__muluhisi3>
 c9a:	60 38       	cpi	r22, 0x80	; 128
 c9c:	74 48       	sbci	r23, 0x84	; 132
 c9e:	8e 41       	sbci	r24, 0x1E	; 30
 ca0:	91 05       	cpc	r25, r1
 ca2:	b0 f0       	brcs	.+44     	; 0xcd0 <__vector_3+0x1d8>
 ca4:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 ca8:	81 30       	cpi	r24, 0x01	; 1
 caa:	91 f4       	brne	.+36     	; 0xcd0 <__vector_3+0x1d8>
				dev_mode_flag=1;
 cac:	81 e0       	ldi	r24, 0x01	; 1
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	a0 e0       	ldi	r26, 0x00	; 0
 cb2:	b0 e0       	ldi	r27, 0x00	; 0
 cb4:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <dev_mode_flag>
 cb8:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <dev_mode_flag+0x1>
 cbc:	a0 93 06 3c 	sts	0x3C06, r26	; 0x803c06 <dev_mode_flag+0x2>
 cc0:	b0 93 07 3c 	sts	0x3C07, r27	; 0x803c07 <dev_mode_flag+0x3>
				BuzzerState.currentState = DEV_INIT_SOUND;
 cc4:	85 e0       	ldi	r24, 0x05	; 5
 cc6:	80 93 3c 3c 	sts	0x3C3C, r24	; 0x803c3c <BuzzerState>
				Buzzer();
 cca:	f3 d9       	rcall	.-3098   	; 0xb2 <Buzzer>
				InputState.currentState=POWER;
 ccc:	10 92 35 3c 	sts	0x3C35, r1	; 0x803c35 <InputState>
				
		}
		if((hold_counter*RTC_TICK>=4*ONE_SEC)&&InputState.currentState== LIGHT_HOLD){
 cd0:	20 91 12 3c 	lds	r18, 0x3C12	; 0x803c12 <hold_counter>
 cd4:	30 91 13 3c 	lds	r19, 0x3C13	; 0x803c13 <hold_counter+0x1>
 cd8:	40 91 14 3c 	lds	r20, 0x3C14	; 0x803c14 <hold_counter+0x2>
 cdc:	50 91 15 3c 	lds	r21, 0x3C15	; 0x803c15 <hold_counter+0x3>
 ce0:	aa e7       	ldi	r26, 0x7A	; 122
 ce2:	b0 e0       	ldi	r27, 0x00	; 0
 ce4:	09 d1       	rcall	.+530    	; 0xef8 <__muluhisi3>
 ce6:	61 15       	cp	r22, r1
 ce8:	79 40       	sbci	r23, 0x09	; 9
 cea:	8d 43       	sbci	r24, 0x3D	; 61
 cec:	91 05       	cpc	r25, r1
 cee:	40 f0       	brcs	.+16     	; 0xd00 <__vector_3+0x208>
 cf0:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 cf4:	87 30       	cpi	r24, 0x07	; 7
 cf6:	21 f4       	brne	.+8      	; 0xd00 <__vector_3+0x208>
			State.currentState = BRIGHT_ADJ;
 cf8:	86 e0       	ldi	r24, 0x06	; 6
 cfa:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
			setState();
 cfe:	a5 db       	rcall	.-2230   	; 0x44a <setState>
		}
		if((hold_counter*RTC_TICK>=2*ONE_SEC)&&InputState.currentState== LIGHT_HOLD&&dev_mode_flag==1){
 d00:	20 91 12 3c 	lds	r18, 0x3C12	; 0x803c12 <hold_counter>
 d04:	30 91 13 3c 	lds	r19, 0x3C13	; 0x803c13 <hold_counter+0x1>
 d08:	40 91 14 3c 	lds	r20, 0x3C14	; 0x803c14 <hold_counter+0x2>
 d0c:	50 91 15 3c 	lds	r21, 0x3C15	; 0x803c15 <hold_counter+0x3>
 d10:	aa e7       	ldi	r26, 0x7A	; 122
 d12:	b0 e0       	ldi	r27, 0x00	; 0
 d14:	f1 d0       	rcall	.+482    	; 0xef8 <__muluhisi3>
 d16:	60 38       	cpi	r22, 0x80	; 128
 d18:	74 48       	sbci	r23, 0x84	; 132
 d1a:	8e 41       	sbci	r24, 0x1E	; 30
 d1c:	91 05       	cpc	r25, r1
 d1e:	00 f1       	brcs	.+64     	; 0xd60 <__vector_3+0x268>
 d20:	80 91 35 3c 	lds	r24, 0x3C35	; 0x803c35 <InputState>
 d24:	87 30       	cpi	r24, 0x07	; 7
 d26:	e1 f4       	brne	.+56     	; 0xd60 <__vector_3+0x268>
 d28:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <dev_mode_flag>
 d2c:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <dev_mode_flag+0x1>
 d30:	a0 91 06 3c 	lds	r26, 0x3C06	; 0x803c06 <dev_mode_flag+0x2>
 d34:	b0 91 07 3c 	lds	r27, 0x3C07	; 0x803c07 <dev_mode_flag+0x3>
 d38:	01 97       	sbiw	r24, 0x01	; 1
 d3a:	a1 05       	cpc	r26, r1
 d3c:	b1 05       	cpc	r27, r1
 d3e:	81 f4       	brne	.+32     	; 0xd60 <__vector_3+0x268>
			State.currentState = DEV_MODE;
 d40:	85 e0       	ldi	r24, 0x05	; 5
 d42:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <State>
			BuzzerState.currentState = DEV_MODE_SOUND;
 d46:	86 e0       	ldi	r24, 0x06	; 6
 d48:	80 93 3c 3c 	sts	0x3C3C, r24	; 0x803c3c <BuzzerState>
			Buzzer();
 d4c:	b2 d9       	rcall	.-3228   	; 0xb2 <Buzzer>
			dev_mode_flag=0;
 d4e:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <dev_mode_flag>
 d52:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <dev_mode_flag+0x1>
 d56:	10 92 06 3c 	sts	0x3C06, r1	; 0x803c06 <dev_mode_flag+0x2>
 d5a:	10 92 07 3c 	sts	0x3C07, r1	; 0x803c07 <dev_mode_flag+0x3>
			//Close all lights at first;
			setState();
 d5e:	75 db       	rcall	.-2326   	; 0x44a <setState>
		}
	}
	if(BuzzerFlag==1){
 d60:	80 91 30 3c 	lds	r24, 0x3C30	; 0x803c30 <BuzzerFlag>
 d64:	90 91 31 3c 	lds	r25, 0x3C31	; 0x803c31 <BuzzerFlag+0x1>
 d68:	a0 91 32 3c 	lds	r26, 0x3C32	; 0x803c32 <BuzzerFlag+0x2>
 d6c:	b0 91 33 3c 	lds	r27, 0x3C33	; 0x803c33 <BuzzerFlag+0x3>
 d70:	01 97       	sbiw	r24, 0x01	; 1
 d72:	a1 05       	cpc	r26, r1
 d74:	b1 05       	cpc	r27, r1
 d76:	09 f0       	breq	.+2      	; 0xd7a <__vector_3+0x282>
 d78:	62 c0       	rjmp	.+196    	; 0xe3e <__vector_3+0x346>
		BuzzerCounter++;
 d7a:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <BuzzerCounter>
 d7e:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 d82:	a0 91 2e 3c 	lds	r26, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 d86:	b0 91 2f 3c 	lds	r27, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 d8a:	01 96       	adiw	r24, 0x01	; 1
 d8c:	a1 1d       	adc	r26, r1
 d8e:	b1 1d       	adc	r27, r1
 d90:	80 93 2c 3c 	sts	0x3C2C, r24	; 0x803c2c <BuzzerCounter>
 d94:	90 93 2d 3c 	sts	0x3C2D, r25	; 0x803c2d <BuzzerCounter+0x1>
 d98:	a0 93 2e 3c 	sts	0x3C2E, r26	; 0x803c2e <BuzzerCounter+0x2>
 d9c:	b0 93 2f 3c 	sts	0x3C2F, r27	; 0x803c2f <BuzzerCounter+0x3>
		PORTD.OUT |= (1<<BUZZER); 
 da0:	e0 e6       	ldi	r30, 0x60	; 96
 da2:	f4 e0       	ldi	r31, 0x04	; 4
 da4:	84 81       	ldd	r24, Z+4	; 0x04
 da6:	80 68       	ori	r24, 0x80	; 128
 da8:	84 83       	std	Z+4, r24	; 0x04
		Buzzer();
 daa:	83 d9       	rcall	.-3322   	; 0xb2 <Buzzer>
		
		if(BuzzerCounter*RTC_TICK>=ONE_SEC/10){
 dac:	20 91 2c 3c 	lds	r18, 0x3C2C	; 0x803c2c <BuzzerCounter>
 db0:	30 91 2d 3c 	lds	r19, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 db4:	40 91 2e 3c 	lds	r20, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 db8:	50 91 2f 3c 	lds	r21, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 dbc:	aa e7       	ldi	r26, 0x7A	; 122
 dbe:	b0 e0       	ldi	r27, 0x00	; 0
 dc0:	9b d0       	rcall	.+310    	; 0xef8 <__muluhisi3>
 dc2:	60 3a       	cpi	r22, 0xA0	; 160
 dc4:	76 48       	sbci	r23, 0x86	; 134
 dc6:	81 40       	sbci	r24, 0x01	; 1
 dc8:	91 05       	cpc	r25, r1
 dca:	e8 f0       	brcs	.+58     	; 0xe06 <__vector_3+0x30e>
			BuzzerFlag=0;
 dcc:	10 92 30 3c 	sts	0x3C30, r1	; 0x803c30 <BuzzerFlag>
 dd0:	10 92 31 3c 	sts	0x3C31, r1	; 0x803c31 <BuzzerFlag+0x1>
 dd4:	10 92 32 3c 	sts	0x3C32, r1	; 0x803c32 <BuzzerFlag+0x2>
 dd8:	10 92 33 3c 	sts	0x3C33, r1	; 0x803c33 <BuzzerFlag+0x3>
			BuzzerCounter=0;
 ddc:	10 92 2c 3c 	sts	0x3C2C, r1	; 0x803c2c <BuzzerCounter>
 de0:	10 92 2d 3c 	sts	0x3C2D, r1	; 0x803c2d <BuzzerCounter+0x1>
 de4:	10 92 2e 3c 	sts	0x3C2E, r1	; 0x803c2e <BuzzerCounter+0x2>
 de8:	10 92 2f 3c 	sts	0x3C2F, r1	; 0x803c2f <BuzzerCounter+0x3>
			Pitch_flag=0;
 dec:	10 92 28 3c 	sts	0x3C28, r1	; 0x803c28 <Pitch_flag>
 df0:	10 92 29 3c 	sts	0x3C29, r1	; 0x803c29 <Pitch_flag+0x1>
 df4:	10 92 2a 3c 	sts	0x3C2A, r1	; 0x803c2a <Pitch_flag+0x2>
 df8:	10 92 2b 3c 	sts	0x3C2B, r1	; 0x803c2b <Pitch_flag+0x3>
			PORTD.OUT &= ~(1<<BUZZER); 
 dfc:	e0 e6       	ldi	r30, 0x60	; 96
 dfe:	f4 e0       	ldi	r31, 0x04	; 4
 e00:	84 81       	ldd	r24, Z+4	; 0x04
 e02:	8f 77       	andi	r24, 0x7F	; 127
 e04:	84 83       	std	Z+4, r24	; 0x04
		}
		if(BuzzerCounter*RTC_TICK>=ONE_SEC/20){
 e06:	20 91 2c 3c 	lds	r18, 0x3C2C	; 0x803c2c <BuzzerCounter>
 e0a:	30 91 2d 3c 	lds	r19, 0x3C2D	; 0x803c2d <BuzzerCounter+0x1>
 e0e:	40 91 2e 3c 	lds	r20, 0x3C2E	; 0x803c2e <BuzzerCounter+0x2>
 e12:	50 91 2f 3c 	lds	r21, 0x3C2F	; 0x803c2f <BuzzerCounter+0x3>
 e16:	aa e7       	ldi	r26, 0x7A	; 122
 e18:	b0 e0       	ldi	r27, 0x00	; 0
 e1a:	6e d0       	rcall	.+220    	; 0xef8 <__muluhisi3>
 e1c:	60 35       	cpi	r22, 0x50	; 80
 e1e:	73 4c       	sbci	r23, 0xC3	; 195
 e20:	81 05       	cpc	r24, r1
 e22:	91 05       	cpc	r25, r1
 e24:	60 f0       	brcs	.+24     	; 0xe3e <__vector_3+0x346>
			Pitch_flag=1;
 e26:	81 e0       	ldi	r24, 0x01	; 1
 e28:	90 e0       	ldi	r25, 0x00	; 0
 e2a:	a0 e0       	ldi	r26, 0x00	; 0
 e2c:	b0 e0       	ldi	r27, 0x00	; 0
 e2e:	80 93 28 3c 	sts	0x3C28, r24	; 0x803c28 <Pitch_flag>
 e32:	90 93 29 3c 	sts	0x3C29, r25	; 0x803c29 <Pitch_flag+0x1>
 e36:	a0 93 2a 3c 	sts	0x3C2A, r26	; 0x803c2a <Pitch_flag+0x2>
 e3a:	b0 93 2b 3c 	sts	0x3C2B, r27	; 0x803c2b <Pitch_flag+0x3>
		}
	}
	if(State.currentState==DEV_MODE){
 e3e:	80 91 39 3c 	lds	r24, 0x3C39	; 0x803c39 <State>
 e42:	85 30       	cpi	r24, 0x05	; 5
 e44:	61 f5       	brne	.+88     	; 0xe9e <__vector_3+0x3a6>
		dev_mode_timer++;
 e46:	80 91 00 3c 	lds	r24, 0x3C00	; 0x803c00 <__DATA_REGION_ORIGIN__>
 e4a:	90 91 01 3c 	lds	r25, 0x3C01	; 0x803c01 <__DATA_REGION_ORIGIN__+0x1>
 e4e:	a0 91 02 3c 	lds	r26, 0x3C02	; 0x803c02 <__DATA_REGION_ORIGIN__+0x2>
 e52:	b0 91 03 3c 	lds	r27, 0x3C03	; 0x803c03 <__DATA_REGION_ORIGIN__+0x3>
 e56:	01 96       	adiw	r24, 0x01	; 1
 e58:	a1 1d       	adc	r26, r1
 e5a:	b1 1d       	adc	r27, r1
 e5c:	80 93 00 3c 	sts	0x3C00, r24	; 0x803c00 <__DATA_REGION_ORIGIN__>
 e60:	90 93 01 3c 	sts	0x3C01, r25	; 0x803c01 <__DATA_REGION_ORIGIN__+0x1>
 e64:	a0 93 02 3c 	sts	0x3C02, r26	; 0x803c02 <__DATA_REGION_ORIGIN__+0x2>
 e68:	b0 93 03 3c 	sts	0x3C03, r27	; 0x803c03 <__DATA_REGION_ORIGIN__+0x3>
		if(dev_mode_timer*RTC_TICK>=ONE_SEC){
 e6c:	20 91 00 3c 	lds	r18, 0x3C00	; 0x803c00 <__DATA_REGION_ORIGIN__>
 e70:	30 91 01 3c 	lds	r19, 0x3C01	; 0x803c01 <__DATA_REGION_ORIGIN__+0x1>
 e74:	40 91 02 3c 	lds	r20, 0x3C02	; 0x803c02 <__DATA_REGION_ORIGIN__+0x2>
 e78:	50 91 03 3c 	lds	r21, 0x3C03	; 0x803c03 <__DATA_REGION_ORIGIN__+0x3>
 e7c:	aa e7       	ldi	r26, 0x7A	; 122
 e7e:	b0 e0       	ldi	r27, 0x00	; 0
 e80:	3b d0       	rcall	.+118    	; 0xef8 <__muluhisi3>
 e82:	60 34       	cpi	r22, 0x40	; 64
 e84:	72 44       	sbci	r23, 0x42	; 66
 e86:	8f 40       	sbci	r24, 0x0F	; 15
 e88:	91 05       	cpc	r25, r1
 e8a:	48 f0       	brcs	.+18     	; 0xe9e <__vector_3+0x3a6>
			dev_mode_timer=0;
 e8c:	10 92 00 3c 	sts	0x3C00, r1	; 0x803c00 <__DATA_REGION_ORIGIN__>
 e90:	10 92 01 3c 	sts	0x3C01, r1	; 0x803c01 <__DATA_REGION_ORIGIN__+0x1>
 e94:	10 92 02 3c 	sts	0x3C02, r1	; 0x803c02 <__DATA_REGION_ORIGIN__+0x2>
 e98:	10 92 03 3c 	sts	0x3C03, r1	; 0x803c03 <__DATA_REGION_ORIGIN__+0x3>
			setState();
 e9c:	d6 da       	rcall	.-2644   	; 0x44a <setState>
		}
	}
}
 e9e:	ff 91       	pop	r31
 ea0:	ef 91       	pop	r30
 ea2:	bf 91       	pop	r27
 ea4:	af 91       	pop	r26
 ea6:	9f 91       	pop	r25
 ea8:	8f 91       	pop	r24
 eaa:	7f 91       	pop	r23
 eac:	6f 91       	pop	r22
 eae:	5f 91       	pop	r21
 eb0:	4f 91       	pop	r20
 eb2:	3f 91       	pop	r19
 eb4:	2f 91       	pop	r18
 eb6:	0f 90       	pop	r0
 eb8:	0f be       	out	0x3f, r0	; 63
 eba:	0f 90       	pop	r0
 ebc:	1f 90       	pop	r1
 ebe:	18 95       	reti

00000ec0 <__divmodsi4>:
 ec0:	05 2e       	mov	r0, r21
 ec2:	97 fb       	bst	r25, 7
 ec4:	16 f4       	brtc	.+4      	; 0xeca <__divmodsi4+0xa>
 ec6:	00 94       	com	r0
 ec8:	0f d0       	rcall	.+30     	; 0xee8 <__negsi2>
 eca:	57 fd       	sbrc	r21, 7
 ecc:	05 d0       	rcall	.+10     	; 0xed8 <__divmodsi4_neg2>
 ece:	1e d0       	rcall	.+60     	; 0xf0c <__udivmodsi4>
 ed0:	07 fc       	sbrc	r0, 7
 ed2:	02 d0       	rcall	.+4      	; 0xed8 <__divmodsi4_neg2>
 ed4:	46 f4       	brtc	.+16     	; 0xee6 <__divmodsi4_exit>
 ed6:	08 c0       	rjmp	.+16     	; 0xee8 <__negsi2>

00000ed8 <__divmodsi4_neg2>:
 ed8:	50 95       	com	r21
 eda:	40 95       	com	r20
 edc:	30 95       	com	r19
 ede:	21 95       	neg	r18
 ee0:	3f 4f       	sbci	r19, 0xFF	; 255
 ee2:	4f 4f       	sbci	r20, 0xFF	; 255
 ee4:	5f 4f       	sbci	r21, 0xFF	; 255

00000ee6 <__divmodsi4_exit>:
 ee6:	08 95       	ret

00000ee8 <__negsi2>:
 ee8:	90 95       	com	r25
 eea:	80 95       	com	r24
 eec:	70 95       	com	r23
 eee:	61 95       	neg	r22
 ef0:	7f 4f       	sbci	r23, 0xFF	; 255
 ef2:	8f 4f       	sbci	r24, 0xFF	; 255
 ef4:	9f 4f       	sbci	r25, 0xFF	; 255
 ef6:	08 95       	ret

00000ef8 <__muluhisi3>:
 ef8:	2b d0       	rcall	.+86     	; 0xf50 <__umulhisi3>
 efa:	a5 9f       	mul	r26, r21
 efc:	90 0d       	add	r25, r0
 efe:	b4 9f       	mul	r27, r20
 f00:	90 0d       	add	r25, r0
 f02:	a4 9f       	mul	r26, r20
 f04:	80 0d       	add	r24, r0
 f06:	91 1d       	adc	r25, r1
 f08:	11 24       	eor	r1, r1
 f0a:	08 95       	ret

00000f0c <__udivmodsi4>:
 f0c:	a1 e2       	ldi	r26, 0x21	; 33
 f0e:	1a 2e       	mov	r1, r26
 f10:	aa 1b       	sub	r26, r26
 f12:	bb 1b       	sub	r27, r27
 f14:	fd 01       	movw	r30, r26
 f16:	0d c0       	rjmp	.+26     	; 0xf32 <__udivmodsi4_ep>

00000f18 <__udivmodsi4_loop>:
 f18:	aa 1f       	adc	r26, r26
 f1a:	bb 1f       	adc	r27, r27
 f1c:	ee 1f       	adc	r30, r30
 f1e:	ff 1f       	adc	r31, r31
 f20:	a2 17       	cp	r26, r18
 f22:	b3 07       	cpc	r27, r19
 f24:	e4 07       	cpc	r30, r20
 f26:	f5 07       	cpc	r31, r21
 f28:	20 f0       	brcs	.+8      	; 0xf32 <__udivmodsi4_ep>
 f2a:	a2 1b       	sub	r26, r18
 f2c:	b3 0b       	sbc	r27, r19
 f2e:	e4 0b       	sbc	r30, r20
 f30:	f5 0b       	sbc	r31, r21

00000f32 <__udivmodsi4_ep>:
 f32:	66 1f       	adc	r22, r22
 f34:	77 1f       	adc	r23, r23
 f36:	88 1f       	adc	r24, r24
 f38:	99 1f       	adc	r25, r25
 f3a:	1a 94       	dec	r1
 f3c:	69 f7       	brne	.-38     	; 0xf18 <__udivmodsi4_loop>
 f3e:	60 95       	com	r22
 f40:	70 95       	com	r23
 f42:	80 95       	com	r24
 f44:	90 95       	com	r25
 f46:	9b 01       	movw	r18, r22
 f48:	ac 01       	movw	r20, r24
 f4a:	bd 01       	movw	r22, r26
 f4c:	cf 01       	movw	r24, r30
 f4e:	08 95       	ret

00000f50 <__umulhisi3>:
 f50:	a2 9f       	mul	r26, r18
 f52:	b0 01       	movw	r22, r0
 f54:	b3 9f       	mul	r27, r19
 f56:	c0 01       	movw	r24, r0
 f58:	a3 9f       	mul	r26, r19
 f5a:	01 d0       	rcall	.+2      	; 0xf5e <__umulhisi3+0xe>
 f5c:	b2 9f       	mul	r27, r18
 f5e:	70 0d       	add	r23, r0
 f60:	81 1d       	adc	r24, r1
 f62:	11 24       	eor	r1, r1
 f64:	91 1d       	adc	r25, r1
 f66:	08 95       	ret

00000f68 <_exit>:
 f68:	f8 94       	cli

00000f6a <__stop_program>:
 f6a:	ff cf       	rjmp	.-2      	; 0xf6a <__stop_program>
